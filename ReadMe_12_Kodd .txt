Основное правило (Foundation Rule)
	Реляционная система управления базами данных (СУБД),
должна быть способна управлять БД, используя исключительно
свои реляционные возможности.

12 правил Кодда:

1) Информационное правило (The information Rule) Вся информация
в реляционной базе данных на логическом уровне должна быть явно
представлена единственным способом: значениями в таблицах.

2) Гарантированный доступ к данным (Guaranteed Access Rule) 
В реляционной БД каждое отдельное (атомарное) значение данных
должно быть логически доступно с помощью комбинации имени 
таблицы, значения первичного ключа и имени столбца.

3) (Любая система БД должна поддерживать значение "NULL")
Систематическая поддержка NULL (Systematic Treatment of Null Values)
Неизвестные, или отсутствующие значения NULL, отличные от любого
известного значения, должны поддерживаться для всех типов данных
при выполнении любых операций. NULL не сводиться к 0 для арифмет-х
типов или к пустым строкам для символьных типов.

4) Доступ к каталогу данных в реляционной модели (Activ On-Line
Catalog Based on the Relation Model) Схема БД должна представ-
ляться в форме реляционных таблиц с возможностью доступа к ним
с использованием реляцонной модели (по аналогии с пользователь-
скими таблицами).

5) Полнота подмножества языка (Comprehensive Data Sublanguage Rule)
Реляционная СУБД должна поддерживаться хотя бы один реляционный
язык, который:
(а) имеет линейный синтаксис, (б) может использоваться как интерак-
тивно, так и в прикладных программах, (в) поддерживает операции
определения структур данных, определения представлений, манипулиро-
вания данными, ограничения целостности, управления правами доступа
и операции управления транзакциями.

6) Возможность изменения представлений (View Updating Rule) Каждое
представление должно поддерживать все операции манипулирования дан-
ными, которые поддерживают реляционные таблицы: операции выборки, 
вставки, изменения и удаления данных.

7) Наличие высокоуровневых операций управления данными (High-Level
insert, Update, and Delete) Операции вставки, изменения и удаления
данных должны поддерживаться не только по отношению к одной строке 
реляционной таблицы, но и по отношению к любому множеству строк.

8) Физическая независимость данных (Physical Data Independence)
Приложения не должны зависеть от используемых способов хранения
данных на носителях, от аппаратного обеспечения компьютеров, на
которых находится реляционная БД.

9) Логическая независимость данных (Logical Data Independens) Пред-
ставление данных в приложении не должно зависеть от структуры рел-х
таблиц. Если в процессе нормализации одна реляционная таблица разде-
ляется на две, представление должно обеспечить такое соединение этих
данных, чтобы изменение структуры реляционных таблиц не связывалось 
на работе приложений.

10) Независимость контроля целостности (Integrity Independence) Вся
информация, необходимая для поддержки целостности, должна находиться
в каталоге данных (см. правило 4). Язык для работы с данными должен
выполнять проверку входных данных и автоматически поддерживать цело-
стность данных.

11) Независимость от расположения (Distribution Independence) База
данных может быть распределенной, может находиться на нескольких 
компьютерах, и это не должно оказывать влияния на приложения. Пере-
нос базы данных на другой компьютер не должен оказывать влияния на 
приложения.

12) Согласование языковых уровней (The Nonsubversion Rule) Если 
используется низкоуровневый язык доступа к данным, он не должен 
игнорировать правила безопасности и правила целостности, которые
поддерживаются языком более высокого уровня.